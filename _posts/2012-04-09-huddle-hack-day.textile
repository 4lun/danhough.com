---
layout: post
title: Huddle's Hack Day
date_created: 10 April 2012
location: London, UK
---

h1(#top). {{ page.title }}

p(meta). Published {{ page.date_created }} in {{ page.location }}

Only interested in the results? Click "here":#results
Only interested in hack day advice? Click "here":#advice

A couple of months ago, "James Pipe":https://twitter.com/jamespipe approached me with an idea that had been done many times, by many startups and other organisations for many themes, but never by "Huddle.":http://www.huddle.com

Naturally, I felt a mixture of excitement and skepticism. I'd only been with Huddle for about seven months, and I'd never organised a hack day before - hell, I'd never even organised a hack hour. The most I'd ever organised for Huddle's Product Engineering team was a day when everyone came in with suits on to poke a bit of fun at our excellent and very well-dressed sales team.

"Okay," I said, "let's do it." And I decided that I'd squash all the skepticism with excitement. The planning began, and we roped "Toby":https://twitter.com/#!/holytshirt in to giving us some advice since he'd done this sort of thing before.

In the end, we made a few key decisions:

* Huddle-only: we're both new to this so let's keep it in the family this time, and restrict hacks to involve Huddle somehow
* We need prizes
* 12 hours - 10am to 10pm
* Encourage people to leave their team-organising until the last minute
* Jagerbombs

Apart from that, we sort-of hoped that this whole thing would work itself out. We decided to hold the hack day on Tuesday, the 3rd of March 2012.

Soon, we had worked out what we needed to do, had given ourselves tasks. James worked out the budget, marketing (a poster with a list of buzzwords for inspiration) and timings, and I worked out the technical requirements (a single Gist detailing how to make a reverse-proxy in Node.JS for our "API":http://code.google.com/p/huddle-apis/), acted as the official pep squad whilst James went on holiday, and maintaining the countdown post-its on the posters. All very organised. The day came, we had a claxon to sound when the games began (whom we named Erik Claxon), we had lots of snacks, drinks and we even had some healthy fruit. We were ready.

h2(#ideas). Ideas

We invited the rest of the company to submit their ideas to a huge whiteboard on post-it notes the Monday night before. The response was unprecedented from Sales, Marketing, Customer Engagement, Product and Corporate. In total we collected over 50 independent ideas on the whiteboard. Some were ridiculous, and actually would have been great hacks had we more time, such as sound effects when you click things, or customiseable backgrounds a-la MySpace. Most of them, however, were genuine ideas for features and improvements that although they might not be suitable for the hack day, will make great Tuesday Time (inspired by Google's 20% Time) fodder. We were blown away by the enthusiasm from the rest of the company.

So, Tuesday morning came and the development team, as well as a few of the non-devs who had submitted their ideas, gathered in the Huddle kitchen to be briefed and for an opportunity to "elevator pitch":http://en.wikipedia.org/wiki/Elevator_pitch their ideas to the rest of the team. And then, the scramble for teams began.

h2(#results). Results

Before I start, just a friendly disclaimer: we only worked on these for 10 hours and none of them went through any kind of QA - that means they won't be released any time soon or are on any roadmap. Also, in case you're interested, I've included links to the Huddle API wherever they're being used.

It was pretty exciting getting our teams worked out. There was a fair amount of winking, nudging and general attempts at convincing the people you wanted if you had an idea of your own, and in the end everybody ended up in a team they liked, or going on their own with only a vision and a vague idea of implementation.

"*Dom's*":http://twitter.com/#!/domgreen hack day project was something that a lot of our users ask about: IM. He played around with "Socket.io":http://socket.io/ to work some Websocket magic, and came up with a functional IM server and client which interacted with Huddle's API to create chatrooms within "Workspaces.":http://code.google.com/p/huddle-apis/wiki/Workspace It is now his current Tuesday Time project.

*Rob* wanted to show off how international Huddle's userbase was, so using IIS logs, he put together an interactive world map where the shade of blue that each country had was indicative of how many unique IPs were using Huddle in a 24-hour period. He scraped this info from our IIS logs and it went onto the map. He filters (by hit count), so you could hide the results of the UK and USA (where most of our users are), and see the other countries in a more useful context. His plans for the future are to combine it with a similar project I'm working on to show Huddle's usage stats, and stick it up on the wall of our office on a big-ass TV.

Building on the limited release of our new Files UI, *Dan Williams* hacked together a simple yet infinitely useful feature. The new UI includes a previewer for a large range of document types with select, copy, etc. - but it's missing an amazing collaboration feature: the ability to highlight text. His hack allows you to highlight text, and write your comment with an inline link to that highlight inside the document preview. E.g. "Looks great, apart from this bit: (highlight here)". A time-saving, elegant solution.

"*I*":http://twitter.com/basicallydan managed to convince "*Pete*,":http://twitter.com/#!/peteog "*Dawn*,":https://twitter.com/#!/dawncarvell and "*Marta*":http://twitter.com/#!/bruja_averia to join me in creating a hack inspired by games of days gone by: a top-down, 2D RPG based on Huddle's API. You play a character whose boss is nagging him to get a document approved, but luckily for you, your boss has a memory of only three items at once and it happens to be analogous to the files "recommended to him by Huddle.":http://www.huddle.com/blog/the-death-of-file-search-and-the-rise-of-predictive-push/ You use this to your advantage by manipulating the workspace in ways that other documents will be recommended to him. Sneaky! With some great teamwork and a lot of work we achieved our goal! *INSERT LINK TO PICTURE HERE*

"*James*":http://github.com/jamescryer also harnessed the power of HTML5 by building another feature on top of our new Files UI: drawing! You can draw on top of a file preview and save what you've done for all to see. A great feature for some of Huddle's more creative clients, especially agencies.

*Will and Bulat* worked on a hack to get inline "tagging" of people working in comments and object descriptions in Huddle. They hooked up some Javascript to Dom's new cutely-named "Friends API":http://code.google.com/p/huddle-apis/wiki/Friends so that if you start typing somebody's name after an @ symbol you can tag them in your comment. When somebody is tagged, a notification is sent off to that person. A great idea for something like Huddle, applying the usability of a social network to a collaboration platform.

"*Francesco*":https://twitter.com/#!/fpighi recruited "*Toby*":https://twitter.com/#!/holytshirt and Kelly* when he came to the conclusion that because Huddle is aimed at businesses, it might help some of our more conservative customers out to know when some inappropriate language is being used in a file uploaded to a workspace - so then they hacked together a mashup. Using "Pusher":http://pusher.com/ with some of our document-indexing services on the backend, they created an interface which would alert any interested user when a file is uploaded which contains any rude words. They were really impressed with Pusher's ease of use, and they created a nice, clean app which worked flawlessly.

"*Bob*":http://twitter.com/#!/bobfromhuddle modified our localisation system so that every time Huddle is hit, our text resources can be updated if there are some changes. Essentially, hot-swapping our localisation keys - very cool for us devs!

"*Ian*":https://twitter.com/#!/icooper didn't have much time to do any hacks during the day but he still made a pretty great one for the power users. He experimented with making Huddle a queryable resource as far as Powershell is concerned, so you could hypothetically use Windows Powershell as a method to browse and query Huddle! Great for sysadmins! *GET MORE INFO FOR THIS*

Last but not least, "*Matt*":https://github.com/MattFenelon won the Hack day with his hack. He created a natural language interface with the app, to use phrases such as "open file" and "open workspace" to browse files and workspaces, including autocomplete to help the user with their query. It even supports chaining massive phrases *GET SOME EXAMPLES*. To top it off though, Matt even plugged the new Google Speech Recognition API into his hack and started talking to Huddle - it was a pretty special demo.

h2(#advice). Advice

As it was our first hack day, there's not a huge amount of advice I can give you, and of course next time there'll be a lot more to learn still. But for the time being, here's what I have to offer.

* Don't scrimp on the pizza: it's much better to have way more, than to have way too little, or you'll end up with hungry, tired devs.
* Get an appropriate amount of booze for the size of your team and the length of your hack day/hackathon, and the day on which it takes place. For a 16-person hack day over 10 hours, on a week day... 60 bottles of beer and a big-ass bottle of Jagermeister is probably too much. If it had been on a weekend, we probably would've needed more. So, check yourself.
* -Having a prize is important, but what it is probably doesn't matter that much-